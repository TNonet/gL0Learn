% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit.R
\name{gL0Learn.gfit}
\alias{gL0Learn.gfit}
\title{Fit an L0-regularized graphical model}
\usage{
gL0Learn.gfit(
  x,
  theta_init = NULL,
  l0 = 0,
  l1 = 0,
  l2 = 0,
  lows = -Inf,
  highs = Inf,
  max_iter = 100,
  max_active_set_size = 0.1,
  algorithm = "CD",
  atol = 1e-06,
  rtol = 1e-06,
  initial_active_set = 0.7,
  super_active_set = 0.5,
  swap_iters = NULL,
  scale_x = FALSE
)
}
\arguments{
\item{x}{The data matrix of shape (n, p) where each row x[i, ] is believed to
be drawn from N(0, theta)}

\item{theta_init}{The initial guess of theta.
Defaults to the identity matrix.
If provided, must be a symmetric matrix of shape (p, p) such that all
non-zero upper triangle values of `theta_init` are included in `active_set`.}

\item{super_active_set}{The set of coordinates that the global optimization
algorithim can swap in and out of `active_set`.
Can be any value that is provided to `active_set`.
Must be larger or equal to `active_set`.}

\item{scale_x}{A boolean flag whether x needs to be scaled by 1/sqrt(n).
If scale_x is false (i.e the matrix is already scaled), the solver will not
save a local copy of x and thus reduce memory usage.}

\item{active_set}{The set of coordinates that the local optimization
algorithm quickly iterates as potential support values of theta.
Can be one of:
    1. 'full' -> Every value in the (p, p) theta matrix is looped over every
    iteration at first. The active set may decrease in size from there.
    2. a scalar value, t, will be used to find the values of x'x that have
    an absolute value larger than t. The coordinates of these values are the
    initial active_set.
    3. Integer Matrix of shape (m, 2) encoding for the coordinates of the
    active_set. Row k (active_set[k, ]), corresponds to the coordinate in
    theta, theta[active_set[k, 1], active_set[k, 2]], is in the active_set.
    *NOTE* All rows of active_set must encode for valid upper triangle
    coordinates of theta
    (i.e. all(x>0) and all(x<p+1)).
    *NOTE* The rows of active_set must be lexicographically sorted such that
    active_set[k] < active_set[j] -> k < j.}

\item{check_inputs}{Not implemented atm. TODO:
If TRUE, checks inputs for validity.
If FALSE, runs on inputs and may error if values are not valid.
Only use this is speed is required and you know what you are doing.}
}
\description{
Computes the ...
}
