name: R CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
    paths:
      - "rpkg/**"
      - '.github/workflows/R.yml'

  pull_request:
    branches: [ main ]
    paths:
      - "rpkg/**"
      - '.github/workflows/R.yml'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        r-version: ['4.1.1', 'release'] #, '3.6.3']
        os: [macos-latest, ubuntu-latest, windows-latest]
        
    defaults:
      run:
        working-directory: rpkg

    steps:
      - uses: actions/checkout@v2
      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r-version }}
          use-public-rspm: true
      - uses: r-lib/actions/setup-pandoc@v1
        with:
          pandoc-version: '2.7.3' 
      - name: Install dependencies
        run: |
          install.packages(c("remotes", "rcmdcheck", "devtools"))
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}
      - name: Check
        run: rcmdcheck::rcmdcheck("R", args = "--no-manual", error_on = "error", check_dir = "check")
        shell: Rscript {0}
      # TODO(TNonet) Move coverage scripts to joint file for Python and R
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache-version: 3
          extra-packages: |
            covr
            xml2
          working-directory:
            rpkg
      - name: Test coverage
        run: |
          covr::package_coverage(
            type = "none",
            code = "testthat::test_package('gL0Learn', reporter = testthat::JunitReporter$new(file = 'test-results.xml'))")
        shell: Rscript {0}
