name: Python CI

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
        # Bug with g++ <= 10.X.Y. Unresolved template functions see "Unresolved overloaded function type in gcc"
        # Must use g++ > 10
        # https://stackoverflow.com/questions/60633892/unresolved-overloaded-function-type-in-gcc
        # clang shou;d work but keep getting #cstddef. Clang should be fully installed. May need to add to the path?
        include:
          - os: macos-latest
            INSTALL_DEPS: |
              brew install openblas
              brew install lapack
              brew install armadillo
            compiler: [clang, clang++]
#           - os: ubuntu-latest
#             compiler: [gcc-11, g++-11]
#             INSTALL_DEPS: |
#               sudo apt-get install liblapack-dev
#               sudo apt-get install libblas-dev
#               sudo apt-get install libboost-dev
#               sudo apt-get install libarmadillo-dev
#               # sudo apt-get install build-essential
#               sudo apt install -y g++-11
#               # sudo apt-get install libc++-dev libc++abi-dev
#               # sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
    defaults:
      run:
        working-directory: ./pypkg

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: install-dependencies
        run: ${{ matrix.INSTALL_DEPS }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          python -m pip install --upgrade numpy --ignore-installed
          python -m pip install --upgrade wheel setuptools pytest-cov coveralls
      - name: Build and install (with ${{matrix.compiler[0]}} compiler, for ${{matrix.os}})
        run: |
          export CC=${{matrix.compiler[0]}}
          export CXX=${{matrix.compiler[1]}}
          pip install --verbose ".[test, opt]"
      - name: run python test file
        run: python scripts/test_failing_func.py
      - name: Upload logs!
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: python_seg_fault_logs
          path: pypkg/scripts/logs
      - name: Run Tests and Coverage
        run: pytest tests/ -vv -s --capture=tee-sys -rx
      - name: Coveralls
        run: coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
